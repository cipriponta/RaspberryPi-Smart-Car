import numpy
import cv2
import enum

# Enums
class IMAGE_OUTPUT(enum.Enum):
    COLOR = 1
    GREYSCALE = 2
    BLURRED = 3
    THRESHOLDED = 4

# Main Loop Constants
LOOP_DELAY = 0.001

# Camera Constants
CAMERA_RESOLUTION = (320, 240)
CAMERA_FRAMERATE = 120
CAMERA_SHUTTER_SPEED = 40000
CAMERA_ISO = 800
CAMERA_INIT_TIME = 0.1
CAMERA_ROTATION = 180

# Image Constants
IMAGE_FORMAT_BGR = "bgr"
IMAGE_OUTPUT_DIMENSION = (1080, 720)

IMAGE_GREYSCALE_MAX_VALUE = 255
IMAGE_THRESHOLD_BLOCK_SIZE = 31
IMAGE_THRESHOLD_SUBTRACTED_CONSTANT = 9
IMAGE_THRESHOLD_SIGMA_X = 0
IMAGE_THRESHOLD_BLUR_METHOD = cv2.GaussianBlur
IMAGE_THRESHOLD_TYPE = cv2.THRESH_BINARY_INV
IMAGE_THRESHOLD_ADAPTIVE_METHOD = cv2.ADAPTIVE_THRESH_GAUSSIAN_C

IMAGE_CONTOUR_RETRIEVAL_MODE = cv2.RETR_LIST
IMAGE_CONTOUR_APPROX_METHOD = cv2.CHAIN_APPROX_NONE

IMAGE_CONTOUR_COLOR = (0, 150, 0)
IMAGE_RECTANGLE_COLOR = (150, 0, 0)
IMAGE_LINES_COLOR = (100, 255, 255)
IMAGE_LINES_THICKNESS = 1

IMAGE_OUTPUT_FRAME = IMAGE_OUTPUT.THRESHOLDED
IMAGE_DISPLAY_CONTOURS = True
IMAGE_DISPLAY_BOUNDED_LINES = True
IMAGE_DISPLAY_LINES = True

# Debug Server Constants
RPI_IP_ADDRESS = "192.168.0.194"
RPI_PORT = 9999
MAX_CONNECIONS = 1
SEGMENT_FORMAT = "L"
RECEIVED_SEGMENT_SIZE = 4 * 1024
CLOSE_SERVER_KEY = 'q'